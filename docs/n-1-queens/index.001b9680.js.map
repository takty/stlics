{"mappings":"C,A,W,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,W,W,O,C,E,S,C,E,O,E,C,GCEA,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,G,E,Q,S,C,C,C,E,E,E,O,C,e,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,Y,W,O,C,E,S,C,E,O,E,C,GCRA,IAkCA,EAEA,EApCI,EAAY,CAAC,EAkCjB,EAjCA,SAA4B,CAAE,EAC5B,IAAI,EAAQ,CAAS,CAAC,EAAG,CAKzB,OAJK,IACH,EAAQ,AAKZ,WACE,GAAI,CACF,MAAM,AAAI,OACZ,CAAE,MAAO,EAAK,CACZ,IAAI,EAAW,AAAA,CAAA,GAAK,EAAI,KAAI,AAAJ,EAAO,KAAK,CAAC,oEACrC,GAAI,EAGF,MAMI,AAAA,CAAA,GANc,CAAO,CAAC,EAAE,AAMnB,EAAK,OAAO,CAAC,0EAA2E,MAAQ,GAJ7G,CACA,MAAO,GACT,IAhBI,CAAS,CAAC,EAAG,CAAG,GAEX,CACT,EA4BA,EATA,SAAmB,CAAG,EACpB,IAAI,EAAU,AAAC,CAAA,GAAK,CAAA,EAAK,KAAK,CAAC,iEAC/B,GAAI,CAAC,EACH,MAAM,AAAI,MAAM,oBAElB,OAAO,CAAO,CAAC,EAAE,AACnB,C,G,E,Q,S,C,C,C,ECjCA,EAAA,OAAA,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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/runtime-f516a657cdc5e876.js","src/_docs/n-1-queens/index.ts","node_modules/@parcel/runtime-js/lib/runtime-670575637b97adf1.js"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire95bc\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire95bc\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"3ypa4\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", function () { return $2968109a5d7edcaf$export$6503ec6e8aabbaf; }, function (v) { return $2968109a5d7edcaf$export$6503ec6e8aabbaf = v; });\nvar $2968109a5d7edcaf$export$6503ec6e8aabbaf;\nvar $2968109a5d7edcaf$export$f7ad0328861e2f03;\n\"use strict\";\nvar $2968109a5d7edcaf$var$mapping = new Map();\nfunction $2968109a5d7edcaf$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$2968109a5d7edcaf$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $2968109a5d7edcaf$var$resolve(id) {\n    var resolved = $2968109a5d7edcaf$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$2968109a5d7edcaf$export$6503ec6e8aabbaf = $2968109a5d7edcaf$var$register;\n$2968109a5d7edcaf$export$f7ad0328861e2f03 = $2968109a5d7edcaf$var$resolve;\n\n});\n\nparcelRegister(\"a5RXe\", function(module, exports) {\n\n$parcel$export(module.exports, \"getBundleURL\", function () { return $75943939d66c476d$export$bdfd709ae4826697; }, function (v) { return $75943939d66c476d$export$bdfd709ae4826697 = v; });\n$parcel$export(module.exports, \"getOrigin\", function () { return $75943939d66c476d$export$5a759dc7a1cfb72a; }, function (v) { return $75943939d66c476d$export$5a759dc7a1cfb72a = v; });\nvar $75943939d66c476d$export$bdfd709ae4826697;\nvar $75943939d66c476d$export$c9e73fbda7da57b6;\nvar $75943939d66c476d$export$5a759dc7a1cfb72a;\n\"use strict\";\nvar $75943939d66c476d$var$bundleURL = {};\nfunction $75943939d66c476d$var$getBundleURLCached(id) {\n    var value = $75943939d66c476d$var$bundleURL[id];\n    if (!value) {\n        value = $75943939d66c476d$var$getBundleURL();\n        $75943939d66c476d$var$bundleURL[id] = value;\n    }\n    return value;\n}\nfunction $75943939d66c476d$var$getBundleURL() {\n    try {\n        throw new Error();\n    } catch (err) {\n        var matches = (\"\" + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n        if (matches) // The first two stack frames will be this function and getBundleURLCached.\n        // Use the 3rd one, which will be a runtime in the original bundle.\n        return $75943939d66c476d$var$getBaseURL(matches[2]);\n    }\n    return \"/\";\n}\nfunction $75943939d66c476d$var$getBaseURL(url) {\n    return (\"\" + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, \"$1\") + \"/\";\n}\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction $75943939d66c476d$var$getOrigin(url) {\n    var matches = (\"\" + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n    if (!matches) throw new Error(\"Origin not found\");\n    return matches[0];\n}\n$75943939d66c476d$export$bdfd709ae4826697 = $75943939d66c476d$var$getBundleURLCached;\n$75943939d66c476d$export$c9e73fbda7da57b6 = $75943939d66c476d$var$getBaseURL;\n$75943939d66c476d$export$5a759dc7a1cfb72a = $75943939d66c476d$var$getOrigin;\n\n});\n\nparcelRegister(\"lCzV3\", function(module, exports) {\n\"use strict\";\nmodule.exports = function(workerUrl, origin, isESM) {\n    if (origin === self.location.origin) // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n    else {\n        // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n        var source = isESM ? \"import \" + JSON.stringify(workerUrl) + \";\" : \"importScripts(\" + JSON.stringify(workerUrl) + \");\";\n        return URL.createObjectURL(new Blob([\n            source\n        ], {\n            type: \"application/javascript\"\n        }));\n    }\n};\n\n});\n\nvar $9f4cfb64316c5ea8$exports = {};\n\n\n(parcelRequire(\"3ypa4\")).register((parcelRequire(\"a5RXe\")).getBundleURL(\"3aQrq\"), JSON.parse('[\"3aQrq\",\"index.001b9680.js\",\"6DTux\",\"../worker.1d4b7e73.js\",\"8uk9Y\",\"../worker.28e2d56a.js\",\"gHrO8\",\"../n-queens/index.bb6614fd.js\"]'));\n\n\nvar $lR2ed = parcelRequire(\"lR2ed\");\n\nvar $cxSbp = parcelRequire(\"cxSbp\");\nconst $ac2e8c7ffa8a1b3d$var$COUNT = 1; // Interaction count\nconst $ac2e8c7ffa8a1b3d$var$SOLVER_TYPE = 4;\nconst $ac2e8c7ffa8a1b3d$var$TARGET_RATE = 0.8;\nconst $ac2e8c7ffa8a1b3d$var$QUEEN_NUM = 20;\nvar $f6800b3765f0c53e$exports = {};\n\nvar $lCzV3 = parcelRequire(\"lCzV3\");\n\nvar $a5RXe = parcelRequire(\"a5RXe\");\nlet $f6800b3765f0c53e$var$url = $a5RXe.getBundleURL(\"3aQrq\") + \"../worker.1d4b7e73.js\";\n$f6800b3765f0c53e$exports = $lCzV3($f6800b3765f0c53e$var$url, $a5RXe.getOrigin($f6800b3765f0c53e$var$url), false);\n\n\ndocument.addEventListener(\"DOMContentLoaded\", async ()=>{\n    const solTypeSel = document.getElementById(\"solver-type\");\n    (0, $lR2ed.SolverFactory).fuzzySolverNames().forEach((sn, i)=>{\n        const o = document.createElement(\"option\");\n        o.textContent = sn;\n        o.value = \"\" + i;\n        solTypeSel.appendChild(o);\n    });\n    solTypeSel.value = \"\" + $ac2e8c7ffa8a1b3d$var$SOLVER_TYPE;\n    const targetRate = document.getElementById(\"target-rate\");\n    targetRate.value = \"\" + $ac2e8c7ffa8a1b3d$var$TARGET_RATE;\n    const queenNum = document.getElementById(\"queen-num\");\n    queenNum.value = \"\" + $ac2e8c7ffa8a1b3d$var$QUEEN_NUM;\n    const board = document.getElementById(\"board\");\n    const output = document.getElementById(\"output\");\n    const log = (0, $cxSbp.createLogOutput)();\n    let trs = null;\n    let worker = null;\n    const solStartBtn = document.getElementById(\"solver-start\");\n    const solStopBtn = document.getElementById(\"solver-stop\");\n    solStartBtn.addEventListener(\"click\", ()=>{\n        solStartBtn.disabled = true;\n        solStopBtn.disabled = false;\n        if (40 <= parseInt(queenNum.value)) board.classList.add(\"small\");\n        else board.classList.remove(\"small\");\n        trs = makeBoard(board, parseInt(queenNum.value));\n        output.value = \"\";\n        worker = initialize(()=>solStopBtn.click());\n        start(worker, parseInt(solTypeSel.value), parseFloat(targetRate.value), parseInt(queenNum.value));\n    });\n    solStopBtn.addEventListener(\"click\", ()=>{\n        solStartBtn.disabled = false;\n        solStopBtn.disabled = true;\n        if (worker) worker.terminate();\n    });\n    // -------------------------------------------------------------------------\n    function makeBoard(board, size) {\n        const trs = [];\n        board.innerHTML = \"\";\n        for(let i = 0; i < size; ++i){\n            const tr = document.createElement(\"tr\");\n            board.appendChild(tr);\n            trs.push(tr);\n            for(let j = 0; j < size - 1; ++j){\n                const td = document.createElement(\"td\");\n                tr.appendChild(td);\n            }\n        }\n        return trs;\n    }\n    // -------------------------------------------------------------------------\n    let count = 0;\n    function initialize(onFinish) {\n        let sumTime = 0;\n        let sumDeg = 0;\n        const ww = new Worker($f6800b3765f0c53e$exports);\n        ww.onmessage = (e)=>{\n            const { data: data } = e;\n            if (\"log\" in data) log(data.log);\n            else if (\"board\" in data) {\n                const { x: x, y: y } = data.board;\n                trs[y].className = \"p\" + x;\n            } else if (\"result\" in data) {\n                const { result: result, solver: solver, time: time, deg: deg } = data;\n                sumTime += time;\n                sumDeg += deg;\n                count += 1;\n                log(`solver: ${solver}   ${result ? \"success\" : \"failure\"}`);\n                log(`trial: ${count}   time: ${time}   degree: ${deg}`);\n                if ($ac2e8c7ffa8a1b3d$var$COUNT <= count) {\n                    log(`average time: ${sumTime / $ac2e8c7ffa8a1b3d$var$COUNT}   average rate: ${sumDeg / $ac2e8c7ffa8a1b3d$var$COUNT}`);\n                    onFinish();\n                }\n            }\n        };\n        return ww;\n    }\n    async function start(ww, solverType, targetRate, queenNum) {\n        for(let i = 0; i < $ac2e8c7ffa8a1b3d$var$COUNT; ++i){\n            const now = count;\n            ww.postMessage({\n                task: \"create\",\n                args: [\n                    queenNum\n                ]\n            });\n            ww.postMessage({\n                task: \"solve\",\n                args: [\n                    solverType,\n                    targetRate\n                ]\n            });\n            await (0, $cxSbp.waitFor)(()=>count !== now);\n        }\n    }\n});\n\n})();\n//# sourceMappingURL=index.001b9680.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nvar bundleURL = {};\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n  return value;\n}\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n  return '/';\n}\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n  return matches[0];\n}\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","require('./helpers/bundle-manifest').register(require('./helpers/bundle-url').getBundleURL('3aQrq'),JSON.parse(\"[\\\"3aQrq\\\",\\\"index.001b9680.js\\\",\\\"6DTux\\\",\\\"../worker.1d4b7e73.js\\\",\\\"8uk9Y\\\",\\\"../worker.28e2d56a.js\\\",\\\"gHrO8\\\",\\\"../n-queens/index.bb6614fd.js\\\"]\"));","import { SolverFactory } from '../../../stlics.ts';\nimport { waitFor, createLogOutput } from '../util.js';\n\nconst COUNT       = 1;  // Interaction count\nconst SOLVER_TYPE = 4;\nconst TARGET_RATE = 0.8;\nconst QUEEN_NUM   = 20;\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n\tconst solTypeSel = document.getElementById('solver-type') as HTMLSelectElement;\n\tSolverFactory.fuzzySolverNames().forEach((sn, i) => {\n\t\tconst o = document.createElement('option');\n\t\to.textContent = sn;\n\t\to.value       = '' + i;\n\t\tsolTypeSel.appendChild(o);\n\t});\n\tsolTypeSel.value = '' + SOLVER_TYPE;\n\tconst targetRate = document.getElementById('target-rate') as HTMLInputElement;\n\ttargetRate.value = '' + TARGET_RATE;\n\n\tconst queenNum = document.getElementById('queen-num') as HTMLInputElement;\n\tqueenNum.value = '' + QUEEN_NUM;\n\n\tconst board  = document.getElementById('board') as HTMLTableElement;\n\tconst output = document.getElementById('output') as HTMLOutputElement;\n\tconst log    = createLogOutput();\n\n\tlet trs: HTMLTableRowElement[]|null = null;\n\tlet worker: Worker|null = null;\n\n\tconst solStartBtn = document.getElementById('solver-start') as HTMLButtonElement;\n\tconst solStopBtn  = document.getElementById('solver-stop') as HTMLButtonElement;\n\tsolStartBtn.addEventListener('click', () => {\n\t\tsolStartBtn.disabled = true;\n\t\tsolStopBtn.disabled  = false;\n\n\t\tif (40 <= parseInt(queenNum.value)) {\n\t\t\tboard.classList.add('small');\n\t\t} else {\n\t\t\tboard.classList.remove('small');\n\t\t}\n\n\t\ttrs = makeBoard(board, parseInt(queenNum.value));\n\t\toutput.value = '';\n\n\t\tworker = initialize(() => solStopBtn.click());\n\t\tstart(worker, parseInt(solTypeSel.value), parseFloat(targetRate.value), parseInt(queenNum.value));\n\t});\n\tsolStopBtn.addEventListener('click', () => {\n\t\tsolStartBtn.disabled = false;\n\t\tsolStopBtn.disabled  = true;\n\n\t\tif (worker) worker.terminate();\n\t});\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tfunction makeBoard(board, size): HTMLTableRowElement[] {\n\t\tconst trs: HTMLTableRowElement[] = [];\n\t\tboard.innerHTML = '';\n\t\tfor (let i = 0; i < size; ++i) {\n\t\t\tconst tr = document.createElement('tr');\n\t\t\tboard.appendChild(tr);\n\t\t\ttrs.push(tr);\n\n\t\t\tfor (let j = 0; j < size - 1; ++j) {\n\t\t\t\tconst td = document.createElement('td');\n\t\t\t\ttr.appendChild(td);\n\t\t\t}\n\t\t}\n\t\treturn trs;\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tlet count = 0;\n\n\tfunction initialize(onFinish) {\n\t\tlet sumTime = 0;\n\t\tlet sumDeg  = 0;\n\n\t\tconst ww = new Worker(new URL('worker.ts', import.meta.url), { type: 'module' });\n\t\tww.onmessage = e => {\n\t\t\tconst { data } = e;\n\t\t\tif ('log' in data) {\n\t\t\t\tlog(data.log);\n\t\t\t} else if ('board' in data) {\n\t\t\t\tconst { x, y } = data.board;\n\t\t\t\t(trs as HTMLTableRowElement[])[y].className = 'p' + x;\n\t\t\t} else if ('result' in data) {\n\t\t\t\tconst { result, solver, time, deg } = data;\n\t\t\t\tsumTime += time;\n\t\t\t\tsumDeg  += deg;\n\t\t\t\tcount   += 1;\n\n\t\t\t\tlog(`solver: ${solver}   ${result ? 'success' : 'failure'}`);\n\t\t\t\tlog(`trial: ${count}   time: ${time}   degree: ${deg}`);\n\n\t\t\t\tif (COUNT <= count) {\n\t\t\t\t\tlog(`average time: ${sumTime / COUNT}   average rate: ${sumDeg / COUNT}`);\n\t\t\t\t\tonFinish();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn ww;\n\t}\n\n\tasync function start(ww, solverType, targetRate, queenNum) {\n\t\tfor (let i = 0; i < COUNT; ++i) {\n\t\t\tconst now = count;\n\t\t\tww.postMessage({ task: 'create', args: [queenNum] });\n\t\t\tww.postMessage({ task: 'solve', args: [solverType, targetRate] });\n\t\t\tawait waitFor(() => (count !== now));\n\t\t}\n\t}\n});\n","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('3aQrq') + \"../worker.1d4b7e73.js\";module.exports = workerURL(url, bundleURL.getOrigin(url), false);"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$2968109a5d7edcaf$export$6503ec6e8aabbaf","$2968109a5d7edcaf$var$mapping","Map","baseUrl","manifest","i","length","path","$75943939d66c476d$export$bdfd709ae4826697","$75943939d66c476d$export$5a759dc7a1cfb72a","$75943939d66c476d$var$bundleURL","value","$75943939d66c476d$var$getBundleURL","matches","stack","match","replace","url","workerUrl","origin","isESM","location","source","JSON","stringify","URL","createObjectURL","Blob","type","getBundleURL","parse","$lR2ed","$cxSbp","$f6800b3765f0c53e$exports","$lCzV3","$a5RXe","$f6800b3765f0c53e$var$url","getOrigin","document","addEventListener","solTypeSel","getElementById","SolverFactory","fuzzySolverNames","forEach","sn","o","createElement","textContent","appendChild","targetRate","queenNum","board","output","log","createLogOutput","trs","worker","solStartBtn","solStopBtn","disabled","parseInt","classList","add","remove","makeBoard","size","innerHTML","tr","push","j","td","start","initialize","onFinish","sumTime","sumDeg","ww","Worker","onmessage","data","x","y","className","result","solver","time","deg","count","click","parseFloat","terminate","solverType","now","postMessage","task","args","waitFor"],"version":3,"file":"index.001b9680.js.map"}