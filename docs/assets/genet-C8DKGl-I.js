var W=Object.defineProperty;var C=n=>{throw TypeError(n)};var j=(n,t,s)=>t in n?W(n,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):n[t]=s;var A=(n,t,s)=>j(n,typeof t!="symbol"?t+"":t,s),y=(n,t,s)=>t.has(n)||C("Cannot "+s);var e=(n,t,s)=>(y(n,t,"read from private field"),s?s.call(n):t.get(n)),h=(n,t,s)=>t.has(n)?C("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(n):t.set(n,s),l=(n,t,s,i)=>(y(n,t,"write to private field"),i?i.call(n,s):t.set(n,s),s),v=(n,t,s)=>(y(n,t,"access private method"),s);import{S as L,A as O}from"./assignment-list-C1updL4I.js";import"./worker-DsrTQ5Xi.js";var u,d,p,G,M,z;class H extends L{constructor(){super();h(this,p);h(this,u);h(this,d)}name(){return"GENET"}preprocess(){if(l(this,u,[]),l(this,d,[]),!v(this,p,G).call(this))throw new Error;this.monitor.initialize()}exec(){const s=[...Array(e(this,u).length).keys()],i=this.pro.ratio(),o=new O;let r=i,f=null;for(;;){const _=this.pro.ratio();if(this.monitor.outputDebugString(`Evaluation: ${_}`),r<_&&(o.setProblem(this.pro),r=_,this.monitor.solutionFound(o,r)))return!0;if((f=this.monitor.check(_))!==null)break;v(this,p,M).call(this,s)}return f===!1&&!this.monitor.isTargetAssigned()&&i<r&&(o.apply(),f=!0),f}}u=new WeakMap,d=new WeakMap,p=new WeakSet,G=function(){this.monitor.outputDebugString("Start of Network Generation");const s=[];for(const i of this.pro.variables()){if(i.domain().size()===0)return!1;e(this,u).push(new P(i))}for(const i of this.pro.constraints())if(i.size()===1){const o=i.at(0),r=e(this,u)[o.index()];for(const f of r){const _=o.value();o.assign(f._value),i.isSatisfied()!==1&&s.push(new V(i,f)),o.assign(_)}}else{const o=i.at(0),r=i.at(1),f=e(this,u)[o.index()],_=e(this,u)[r.index()];for(const k of f){const D=o.value();o.assign(k._value);for(const T of _){const F=r.value();r.assign(T._value),i.isSatisfied()!==1&&s.push(new V(i,k,T)),r.assign(F)}o.assign(D)}}for(const i of e(this,u))for(const o of i._neurons)o.lockConnections();return l(this,d,s),this.monitor.outputDebugString("End of Network Generation"),!0},M=function(s){let i=!1;for(const o of v(this,p,z).call(this,s))e(this,u)[o].setActivityMaximumInput()&&(i=!0);if(i)for(const o of e(this,u))o.applyToVariable();else for(const o of e(this,d))o.refreshWeight()},z=function(s){for(let i=s.length;i>1;--i){const o=I(i),r=s[i-1];s[i-1]=s[o],s[o]=r}return s};var N,w,g,S,E;class P{constructor(t){h(this,S);h(this,N);h(this,w,0);h(this,g,[]);A(this,"_neurons",[]);l(this,N,t);for(const s of t.domain())this._neurons.push(new Y(s));v(this,S,E).call(this,I(this._neurons.length))}applyToVariable(){e(this,N).assign(this._neurons[e(this,w)]._value)}setActivityMaximumInput(){e(this,g).length=0;let t=Number.NEGATIVE_INFINITY,s=!1;for(let i=0;i<this._neurons.length;++i){const o=this._neurons[i].getInput();t<=o&&(t<o&&(t=o,e(this,g).length=0,s=!1),e(this,g).push(i),e(this,w)===i&&(s=!0))}return s||e(this,g).length===0?!1:(v(this,S,E).call(this,e(this,g)[I(e(this,g).length)]),!0)}[Symbol.iterator](){return this._neurons[Symbol.iterator]()}}N=new WeakMap,w=new WeakMap,g=new WeakMap,S=new WeakSet,E=function(t){for(const s of this._neurons)s._isActive=!1;this._neurons[t]._isActive=!0,l(this,w,t)};var m,c,a;class V{constructor(t,s,i=null){h(this,m);h(this,c);h(this,a);A(this,"_weight");l(this,m,t),l(this,c,s),l(this,a,i),this._weight=t.isSatisfied()-1,e(this,c).addConnection(this),e(this,a)&&e(this,a).addConnection(this)}getNeuron(t){return t===e(this,c)?e(this,a):t===e(this,a)?e(this,c):null}refreshWeight(){!e(this,c)._isActive||e(this,a)!==null&&!e(this,a)._isActive||(e(this,m).size()===1?this._weight+=e(this,m).relation().isSatisfied(e(this,c)._value)-1:this._weight+=e(this,m).relation().isSatisfied(e(this,c)._value,e(this,a)._value)-1)}}m=new WeakMap,c=new WeakMap,a=new WeakMap;var b,x;class Y{constructor(t){h(this,b,[]);h(this,x,[]);A(this,"_value");A(this,"_isActive",!1);this._value=t}addConnection(t){e(this,x).push(t)}lockConnections(){l(this,b,[...e(this,x)]),l(this,x,null)}getInput(){let t=0;for(const s of e(this,b)){const i=s.getNeuron(this);t+=s._weight*(i===null||i._isActive?1:0)}return t}}b=new WeakMap,x=new WeakMap;function I(n){return Math.floor(Math.random()*Math.floor(n))}export{H as GENET};
