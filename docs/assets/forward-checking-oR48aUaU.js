var y=s=>{throw TypeError(s)};var w=(s,o,t)=>o.has(s)||y("Cannot "+t);var e=(s,o,t)=>(w(s,o,"read from private field"),t?t.call(s):o.get(s)),f=(s,o,t)=>o.has(s)?y("Cannot add the same private member more than once"):o instanceof WeakSet?o.add(s):o.set(s,t),d=(s,o,t,i)=>(w(s,o,"write to private field"),i?i.call(s,t):o.set(s,t),t),l=(s,o,t)=>(w(s,o,"access private method"),t);import{S as F,A as S}from"./assignment-list-BWqeqhDz.js";import{c as P,D as R,i as D}from"./problems-NShnYMbn.js";import"./worker-Djgd5E2e.js";var c,g,h,m,b,a,k,z,C,V,v;class L extends F{constructor(){super();f(this,a);f(this,c);f(this,g);f(this,h);f(this,m);f(this,b,!0)}setUsingMinimumRemainingValuesHeuristics(t){d(this,b,t)}name(){return"Forward Checking"}preprocess(){d(this,c,[...this.pro.variables()]),d(this,g,P(this.pro,e(this,c))),d(this,h,Array.from(e(this,c),t=>new R(t.domain().size()))),d(this,m,new S),this.pro.clearAllVariables(),this.monitor.initialize()}exec(){const t=l(this,a,k).call(this,0);return e(this,m).apply(),t===!0}}c=new WeakMap,g=new WeakMap,h=new WeakMap,m=new WeakMap,b=new WeakMap,a=new WeakSet,k=function(t){if(t===this.pro.variableSize()){const n=this.pro.ratio();return e(this,m).setProblem(this.pro),this.monitor.outputDebugString(`	Evaluation ${n}`),this.monitor.solutionFound(e(this,m),n),!0}let i=null;if((i=this.monitor.check())!==null)return i;const r=e(this,c)[e(this,b)?D(e(this,c),e(this,h)):t],u=r.domain(),x=e(this,h)[r.index()];for(let n=0,p=u.size();n<p;++n)if(!(x.isPruned(n)||(r.assign(u.at(n)),l(this,a,v).call(this,r)))){if(l(this,a,z).call(this,t,r)&&(i=l(this,a,k).call(this,t+1),i!==null))break;for(const A of e(this,h))A.recover(t)}if(i===null){for(const n of e(this,h))n.recover(t);r.clear()}return i},z=function(t,i){for(const r of e(this,c)){if(!r.isEmpty())continue;const u=l(this,a,C).call(this,i.index(),r.index()),x=e(this,h)[r.index()],n=r.domain();for(const p of u)if(p.emptySize()===1&&!l(this,a,V).call(this,t,r,n,x,p))return!1}return!0},C=function(t,i){return t<i?e(this,g)[i][t]:e(this,g)[t][i]},V=function(t,i,r,u,x){for(let n=0,p=r.size();n<p;++n)u.isPruned(n)||(i.assign(r.at(n)),x.status()===0&&u.prune(n,t));return i.clear(),!u.isEmpty()},v=function(t){let i=0;for(const r of t)r.status()===0&&++i;return i};export{L as ForwardChecking};
