var D=Object.defineProperty;var d=s=>{throw TypeError(s)};var m=(s,e,t)=>e in s?D(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var c=(s,e,t)=>m(s,typeof e!="symbol"?e+"":e,t),x=(s,e,t)=>e.has(s)||d("Cannot "+t);var a=(s,e,t)=>(x(s,e,"read from private field"),t?t.call(s):e.get(s)),u=(s,e,t)=>e.has(s)?d("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(s):e.set(s,t),h=(s,e,t,i)=>(x(s,e,"write to private field"),i?i.call(s,t):e.set(s,t),t);var n,r;class F{constructor(){u(this,n,-1);u(this,r,"");c(this,"userObject",null)}setIndex(e){h(this,n,e)}setName(e){h(this,r,e)}index(){return a(this,n)}name(){return a(this,r)}}n=new WeakMap,r=new WeakMap;class z{}class I extends z{isSatisfied(...e){const t=this.degree(...e);return 0<t&&t<1?0:t}}const l=class l extends F{constructor(t){super();c(this,"rel");this.rel=t}relation(){return this.rel}isFuzzy(){return this.rel instanceof I}toString(){const t=this.name(),i=t?`(${t})`:"",o=this.degree(),N=o===l.UNDEFINED?"UNDEFINED":""+o;return`c${this.index()}${i} = ${N}`}};c(l,"UNDEFINED",-1);let E=l;export{E as C};
