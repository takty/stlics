{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-06581d0942e64908.js","src/solver/fuzzy/fuzzy-forward-checking.js","src/problem/constraint.js","src/problem/element.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/problem/relation-fuzzy.js","src/problem/relation.js","src/util/assignment-list.js","src/util/assignment.js","src/util/domain-pruner.js","src/solver/solver.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"71805da8c2f2e495\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\n\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, assetsToDispose\n/*: Array<[ParcelRequire, string]> */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets); // Dispose all old assets.\n\n        let processedAssets = {}\n        /*: {|[string]: boolean|} */\n        ;\n\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n\n\n        processedAssets = {};\n\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\n\nfunction hmrDispose(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n\n  delete bundle.cache[id];\n}\n\nfunction hmrAccept(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  // Execute the module.\n  bundle(id); // Run the accept callbacks in the new version of the module.\n\n  var cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        }); // $FlowFixMe[method-unbinding]\n\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","/**\n * This class implements the forward checking method for fuzzy CSP.\n * The minimum-remaining-values (MRV) heuristic can also be used by specifying the option.\n * Each variable must have its own domain because it hides domain elements as branch pruning.\n * Forward checking is also performed for problems with polynomial constraints.\n *\n * @author Takuto Yanagida\n * @version 2023-04-16\n */\n\nimport { Constraint } from '../../problem/constraint.js';\nimport { AssignmentList } from '../../util/assignment-list.js';\nimport { DomainPruner } from '../../util/domain-pruner.js';\nimport { Solver } from '../solver.js';\n\nexport class FuzzyForwardChecking extends Solver {\n\n\tstatic CONTINUE  = 0;\n\tstatic TERMINATE = 1;\n\n\t#vars;\n\t#sol = new AssignmentList();\n\t#relCons;  // Table to cache constraints between two variables.\n\n\t#solWorstDeg = 0;  // Degree of existing solutions (no need to find a solution less than this).\n\n\t#iterCount;\n\t#endTime;\n\t#useMRV = false;\n\t#degInc = 0;\n\n\t#sequence;\n\t#unaryCons;\n\t#checkedCons;\n\t#pruneIntensively = false;\n\n\t/**\n\t * Generates the solver given a fuzzy constraint satisfaction problem.\n\t * @param p A fuzzy problem.\n\t * @param worstSatisfactionDegree Worst satisfaction degree.\n\t */\n\tconstructor(p, worstSatisfactionDegree = null) {\n\t\tsuper(p);\n\t\tthis.#vars = [...this._pro.variables()];\n\t\tthis.#sequence = new Array(this._pro.variableSize());\n\t\tthis.#initializeRelatedConstraintTable();\n\t\tthis.#checkedCons = new Array(this._pro.constraintSize());\n\n\t\tconst temp = [];\n\t\tfor (const c of this._pro.constraints()) {\n\t\t\tif (c.size() === 1) temp.push(c);\n\t\t}\n\t\tthis.#unaryCons = [...temp];  // To make it even if it is empty.\n\t\tif (worstSatisfactionDegree) {\n\t\t\tthis.#solWorstDeg = worstSatisfactionDegree;\n\t\t}\n\t}\n\n\tname() {\n\t\treturn 'Forward Checking for Fuzzy CSPs';\n\t}\n\n\t// Initializes a table that caches constraints between two variables.\n\t#initializeRelatedConstraintTable() {\n\t\tthis.#relCons = [];\n\n\t\tfor (let j = 0; j < this.#vars.length; ++j) {\n\t\t\tthis.#relCons.push(new Array(this.#vars.length));\n\n\t\t\tfor (let i = 0; i < this.#vars.length; ++i) {\n\t\t\t\tif (i < j) {\n\t\t\t\t\tthis.#relCons[j][i] = this._pro.constraintsBetween(this.#vars[i], this.#vars[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Retrieves an array of constraints from a table that caches constraints between two variables.\n\t#getConstraintsBetween(vi_index, vj_index) {\n\t\tif (vi_index < vj_index) {\n\t\t\treturn this.#relCons[vj_index][vi_index];\n\t\t}\n\t\treturn this.#relCons[vi_index][vj_index];\n\t}\n\n\t// Prune elements of the domain that make the unary constraint worse than the current worst degree.\n\t#pruneUnaryConstraints() {\n\t\tfor (const c of this.#unaryCons) {\n\t\t\tconst v      = c.at(0);\n\t\t\tconst orgVal = v.value();  // Save the value.\n\t\t\tconst d      = v.domain();\n\t\t\tconst dc     = v.solverObject;\n\n\t\t\tfor (let i = 0, n = d.size(); i < n; ++i) {\n\t\t\t\tv.assign(d.at(i));\n\t\t\t\tif (c.satisfactionDegree() <= this.#solWorstDeg) {\n\t\t\t\t\tdc.hide(i, -1);  // Here's a branch pruning!\n\t\t\t\t}\n\t\t\t}\n\t\t\tv.assign(orgVal);  // Restore the value.\n\t\t\tif (dc.isEmpty()) return false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t// Check for consistency between the current variable and one future variable, and prune elements of the domain that are inconsistent (when there is one unassigned variable in the scope of the constraint).\n\t#checkForwardConsistency(level, vi, c) {\n\t\tconst di  = vi.domain();\n\t\tconst dci = vi.solverObject;\n\n\t\tfor (let i = 0, n = di.size(); i < n; ++i) {\n\t\t\tif (dci.isValueHidden(i)) continue;\n\t\t\tvi.assign(di.at(i));\n\t\t\tif (c.satisfactionDegree() <= this.#solWorstDeg) {  // It is not a solution when it is 'smaller than or equals'.\n\t\t\t\tdci.hide(i, level);  // Here's a branch pruning!\n\t\t\t}\n\t\t}\n\t\tvi.clear();\n\t\treturn !dci.isEmpty();  // Succeeds if the domain di of the future variable vi is not empty.\n\t}\n\n\t// Check for consistency between the current variable and one future variable, and prune elements of the domain that are inconsistent (when there are two unassigned variables in the scope of the constraint).\n\t#checkForwardConsistency2(level, vi, c) {\n\t\tconst di  = vi.domain();\n\t\tconst dci = vi.solverObject;\n\t\tconst vj  = null;\n\n\t\tfor (const v of c) {\n\t\t\tif (v.isEmpty() && v !== vi) {\n\t\t\t\tvj = v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst dj  = vj.domain();\n\t\tconst dcj = vj.solverObject;\n\t\tloop_i: for (let i = 0, ni = di.size(); i < ni; ++i) {\n\t\t\tif (dci.isValueHidden(i)) continue;\n\t\t\tvi.assign(di.at(i));  // Tentative assignment to vi\n\t\t\tfor (let j = 0, nj = dj.size(); j < nj; ++j) {\n\t\t\t\tif (dcj.isValueHidden(j)) continue;\n\t\t\t\tvj.assign(dj.at(j));  // Tentative assignment to vj\n\t\t\t\tconst s = c.satisfactionDegree();\n\t\t\t\tif (s > this.#solWorstDeg) continue loop_i;  // Tentative assignment to vi was OK -> next tentative assignment.\n\t\t\t}\n\t\t\tdci.hide(i, level);  // It is not a solution when it is 'smaller than or equals'.\n\t\t}\n\t\tvj.clear();\n\t\tvi.clear();\n\t\treturn !dci.isEmpty();  // Succeeds if the domain di of the future variable vi is not empty.\n\t}\n\n\t// Check for consistency between the current variable and one future variable, and prune elements of the domain that are inconsistent (when there are three unassigned variables in the scope of the constraint).\n\t#checkForwardConsistency3(level, vi, c) {\n\t\tconst di  = vi.domain();\n\t\tconst dci = vi.solverObject;\n\n\t\tlet vj = null;\n\t\tlet vk = null;\n\n\t\tfor (const v of c) {\n\t\t\tif (v.isEmpty() && v !== vi) {\n\t\t\t\tif (vj === null) {\n\t\t\t\t\tvj = v;\n\t\t\t\t} else {\n\t\t\t\t\tvk = v;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst dj  = vj.domain();\n\t\tconst dk  = vk.domain();\n\t\tconst dcj = vj.solverObject;\n\t\tconst dck = vk.solverObject;\n\n\t\tloop_i: for (let i = 0, ni = di.size(); i < ni; ++i) {\n\t\t\tif (dci.isValueHidden(i)) continue;\n\t\t\tvi.assign(di.at(i));  // Tentative assignment to vi\n\t\t\tfor (let j = 0, nj = dj.size(); j < nj; ++j) {\n\t\t\t\tif (dcj.isValueHidden(j)) continue;\n\t\t\t\tvj.assign(dj.at(j));  // Tentative assignment to vj\n\t\t\t\tfor (let k = 0, nk = dk.size(); k < nk; ++k) {\n\t\t\t\t\tif (dck.isValueHidden(k)) continue;\n\t\t\t\t\tvk.assign(dk.at(k));  // Tentative assignment to vk\n\t\t\t\t\tconst s = c.satisfactionDegree();\n\t\t\t\t\tif (s > this.#solWorstDeg) continue loop_i;  // Tentative assignment to vi was OK -> next tentative assignment.\n\t\t\t\t}\n\t\t\t}\n\t\t\tdci.hide(i, level);  // It is not a solution when it is 'smaller than or equals'.\n\t\t}\n\t\tvk.clear();\n\t\tvj.clear();\n\t\tvi.clear();\n\t\treturn !dci.isEmpty();  // Succeeds if the domain di of the future variable vi is not empty.\n\t}\n\n\t// In the case of polynomial constraints and when there are four or more unassigned variables, all combinations of assignments of unassigned variables are examined and pruned.\n\t#checkForwardConsistencyN(level, vi, c, emptySize) {\n\t\tconst di  = vi.domain();\n\t\tconst dci = vi.solverObject;\n\t\tconst emp = new Array(emptySize - 1);\n\t\tlet j = 0;\n\n\t\tfor (const v of c) {\n\t\t\tif (v.isEmpty() && v !== vi) emp[j++] = v;\n\t\t}\n\t\tconst indexes = new Array(emp.length);\n\n\t\tloop_i: for (let i = 0, n = di.size(); i < n; ++i) {\n\t\t\tif (dci.isValueHidden(i)) continue;\n\t\t\tvi.assign(di.at(i));  // Tentative assignment to vi\n\t\t\tindexes.fill(0);\n\n\t\t\tcomLoop: while (true) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tfor (let k = 0; k < emp.length; ++k) {\n\t\t\t\t\tconst dk  = emp[k].domain();\n\t\t\t\t\tconst dck = emp[k].solverObject;\n\t\t\t\t\tif (dck.isValueHidden(indexes[k])) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\temp[k].assign(dk.at(indexes[k]));\n\t\t\t\t}\n\t\t\t\tif (!hidden) {\n\t\t\t\t\tconst s = c.satisfactionDegree();\n\t\t\t\t\tif (s > this.#solWorstDeg) continue loop_i;  // Tentative assignment to vi was OK -> next tentative assignment.\n\t\t\t\t}\n\t\t\t\tfor (let k = 0; k < emp.length; ++k) {\n\t\t\t\t\tindexes[k] += 1;\n\t\t\t\t\tif (indexes[k] < emp[k].domain().size()) break;\n\t\t\t\t\tindexes[k] = 0;\n\t\t\t\t\tif (k === emp.length - 1) break comLoop;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdci.hide(i, level);\n\t\t}\n\t\tfor (const v of emp) v.clear();\n\t\tvi.clear();\n\t\treturn !dci.isEmpty();  // Succeeds if the domain di of the future variable vi is not empty.\n\t}\n\n\t// Checks for possible assignment to a future variable from the current variable assignment.\n\t#checkForward(level, index) {\n\t\tfor (const v_i of  this.#vars) {\n\t\t\tif (!v_i.isEmpty()) continue;  // If it is a past or present variable.\n\n\t\t\tconst cs = this.#getConstraintsBetween(index, v_i.index());\n\n\t\t\tfor (const c of cs) {\n\t\t\t\tconst emptySize = c.emptyVariableSize();\n\t\t\t\tif (emptySize === 1) {\n\t\t\t\t\tif (!this.#checkForwardConsistency(level, v_i, c)) return false;\n\t\t\t\t} else if (this.#pruneIntensively) {  // Depends on options\n\t\t\t\t\tif (emptySize === 2) {\n\t\t\t\t\t\tif (!this.#checkForwardConsistency2(level, v_i, c)) return false;\n\t\t\t\t\t} else if (emptySize === 3) {\n\t\t\t\t\t\tif (!this.#checkForwardConsistency3(level, v_i, c)) return false;\n\t\t\t\t\t} else if (emptySize > 3) {\n\t\t\t\t\t\tif (!this.#checkForwardConsistencyN(level, v_i, c, emptySize)) return false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t// Checks to see if the current variable assignment makes the degree of the past variable worse than the current worst degree.\n\t#checkBackwardConsistency(vc) {\n\t\tthis.#checkedCons.fill(false);  // Reuse.\n\n\t\tfor (let i = 0; i < this.#vars.length; ++i) {  // Find past variables.\n\t\t\tconst vi = this.#vars[i];\n\t\t\tif (vi === vc || vi.isEmpty()) continue;  // If it is a future variable or a present variable.\n\t\t\tconst cs = this.#getConstraintsBetween(vc.index(), i);\n\n\t\t\tfor (const c of cs) {\n\t\t\t\tif (this.#checkedCons[c.index()]) continue;  // Because of the possibility of duplication in polynomial constraints\n\t\t\t\tconst s = c.satisfactionDegree();\n\t\t\t\tif (s !== Constraint.UNDEFINED && s <= this.#solWorstDeg) {  // It is not a solution when it is 'smaller than or equals'.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tthis.#checkedCons[c.index()] = true;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t#refresh() {\n\t\tfor (let i = 0; i < this.#sequence.length; ++i) {\n\t\t\tconst index_vi = this.#sequence[i].index();\n\n\t\t\tfor (let j = i + 1; j < this.#sequence.length; ++j) {\n\t\t\t\tconst vj = this.#sequence[j];\n\t\t\t\tconst cs = this.#getConstraintsBetween(index_vi, vj.index());\n\n\t\t\t\tfor (const c of cs) {\n\t\t\t\t\tconst orgVal = vj.value();\n\t\t\t\t\tconst dj     = vj.domain();\n\t\t\t\t\tconst dcj    = vj.solverObject;\n\n\t\t\t\t\tfor (let k = 0, n = dj.size(); k < n; ++k) {\n\t\t\t\t\t\tif (dcj.isValueHidden(k)) continue;\n\t\t\t\t\t\tvj.assign(dj.at(k));\n\t\t\t\t\t\tif (c.satisfactionDegree() <= this.#solWorstDeg) {\n\t\t\t\t\t\t\tdcj.hide(k, i);  // Here's a branch pruning!\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvj.assign(orgVal);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Returns the index of the smallest domain variable.\n\t#indexOfVariableWithMRV() {\n\t\tlet index = 0;\n\t\tlet size  = Number.MAX_VALUE;\n\n\t\tfor (let i = 0; i < this.#vars.length; ++i) {\n\t\t\tconst v = this.#vars[i];\n\t\t\tif (!v.isEmpty()) continue;\n\t\t\tconst d = v.domain();\n\t\t\tconst s = d.size() - v.solverObject.hiddenSize();\n\t\t\tif (s < size) {\n\t\t\t\tsize  = s;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn index;\n\t}\n\n\t// Performs search one variable at a time.\n\t#branch(level) {\n\t\tlet bc = FuzzyForwardChecking.CONTINUE;\n\t\tconst vc_index = this.#useMRV ? this.#indexOfVariableWithMRV() : level;\n\t\tconst vc       = this.#vars[vc_index];\n\t\tconst d        = vc.domain();\n\t\tconst dc       = vc.solverObject;\n\t\tthis.#sequence[level] = vc;\n\n\t\tfor (let i = 0, n = d.size(); i < n; ++i) {\n\t\t\tif (dc.isValueHidden(i)) continue;\n\t\t\tif ((this._iterLimit && this._iterLimit < this.#iterCount++) || this.#endTime < Date.now()) {\n\t\t\t\tbc = FuzzyForwardChecking.TERMINATE;  // Search terminated due to restrictions.\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvc.assign(d.at(i));\n\n\t\t\tfor (const v of this.#vars) v.solverObject.reveal(level);\n\t\t\tif (!this.#checkBackwardConsistency(vc)) continue;\n\t\t\tif (!this.#checkForward(level, vc_index)) continue;\n\n\t\t\tconst nextLevel = level + 1;\n\t\t\tbc = (nextLevel === this.#vars.length - 1) ? this.#branchLast(nextLevel) : this.#branch(nextLevel);\n\t\t\tif (bc === FuzzyForwardChecking.TERMINATE) break;\n\t\t}\n\t\tif (bc === FuzzyForwardChecking.CONTINUE) {  // When searching back to the parent, undo the branch pruning here.\n\t\t\tfor (const v of this.#vars) v.solverObject.reveal(level);\n\t\t}\n\t\tvc.clear();\n\t\treturn bc;\n\t}\n\n\t// Performs search on the last variable.\n\t#branchLast(level) {\n\t\tlet bc = FuzzyForwardChecking.CONTINUE;\n\t\tconst vc = this.#vars[this.#useMRV ? this.#indexOfVariableWithMRV() : level];\n\t\tconst d  = vc.domain();\n\t\tconst dc = vc.solverObject;\n\t\tthis.#sequence[level] = vc;\n\n\t\tfor (let i = 0, n = d.size(); i < n; ++i) {\n\t\t\tif (dc.isValueHidden(i)) continue;\n\t\t\tif ((this._iterLimit && this._iterLimit < this.#iterCount++) || this.#endTime < Date.now()) {\n\t\t\t\tbc = FuzzyForwardChecking.TERMINATE;  // Search terminated due to restrictions.\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvc.assign(d.at(i));\n\n\t\t\tconst deg = this._pro.worstSatisfactionDegree();\n\t\t\tif (deg > this.#solWorstDeg) {  // A new solution is assumed when 'greater than'.\n\t\t\t\tthis.#solWorstDeg = deg;\n\t\t\t\tthis.#sol.setProblem(this._pro);\n\t\t\t\tbc = FuzzyForwardChecking.TERMINATE;\n\t\t\t\tif (this._targetDeg !==  null && this._targetDeg <= this.#solWorstDeg) {  // Search ends when target is reached\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis.#pruneUnaryConstraints();\n\t\t\t\tthis.#refresh();\n\t\t\t}\n\t\t}\n\t\tvc.clear();\n\t\treturn bc;\n\t}\n\n\t// Do search.\n\texec() {\n\t\tthis.#endTime   = (this._timeLimit === null) ? Number.MAX_VALUE : (Date.now() + this._timeLimit);\n\t\tthis.#iterCount = 0;\n\n\t\tfor (const v of this.#vars) {\n\t\t\tv.solverObject = new DomainPruner(v.domain().size());  // Generation of domain pruners.\n\t\t}\n\t\tthis._pro.clearAllVariables();\n\t\tif (!this.#pruneUnaryConstraints()) return false;  // Since _worstSatisfactionDegree_ has been updated, call this function.\n\n\t\tlet success = false;\n\t\twhile (true) {\n\t\t\tconst bc = this.#branch(0);\n\t\t\tif (bc === FuzzyForwardChecking.TERMINATE) {\n\t\t\t\tif (this._iterLimit && this._iterLimit < this.#iterCount++) {\n\t\t\t\t\tthis._debugOutput('stop: number of iterations has reached the limit');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this.#endTime < Date.now()) {\n\t\t\t\t\tthis._debugOutput('stop: time limit has been reached');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.#sol.isEmpty()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._debugOutput(`\\tfound a solution: ${this.#solWorstDeg}`);\n\t\t\tif (this.foundSolution(this.#sol, this.#solWorstDeg)) {  // Call hook\n\t\t\t\tsuccess = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (this._targetDeg === null) {  // Degree not specified\n\t\t\t\tsuccess = true;\n\t\t\t\tthis.#solWorstDeg += this.#degInc;  // Find the next solution within the limit.\n\t\t\t} else if (this._targetDeg <= this.#solWorstDeg) {  // The current degree exceeded the specified degree.\n\t\t\t\tthis._debugOutput('stop: current degree is above the target');\n\t\t\t\tsuccess = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor (const v of this.#vars) v.solverObject.revealAll();\n\t\t}\n\t\tthis.#sol.apply();\n\t\tfor (const v of this.#vars) v.solverObject = null;  // Delete branch pruner\n\t\treturn success;\n\t}\n\n\t/**\n\t * Constraint satisfaction degree is set as an achievement goal that serves as a condition for stopping the solver.\n\t * The solver stops as successful when the specified degree is reached or exceeded.\n\t * The default (unset) is 0.8.\n\t * @param rate Degree. null indicates not set.\n\t */\n\tsetTargetRate(rate = null) {\n\t\tthis._targetDeg = rate;\n\t\tif (this._targetDeg === null) {\n\t\t\tthis.#solWorstDeg = 0;\n\t\t} else {\n\t\t\t// Find the worstSatisfactionDegree_ that is slightly smaller than the targetDegree_.\n\t\t\tlet e = Number.MIN_VALUE\n\t\t\tthis.#solWorstDeg = this._targetDeg - e;\n\t\t\twhile (this.#solWorstDeg >= this._targetDeg) {\n\t\t\t\te *= 10;\n\t\t\t\tthis.#solWorstDeg = this._targetDeg - e;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Specify whether to use the minimum-remaining-values (MRV) heuristic.\n\t * Use of MRV may increase processing time for some problems.\n\t * Default is false.\n\t * @param flag Use MRV if true.\n\t */\n\tsetUsingMinimumRemainingValuesHeuristics(flag) {\n\t\tthis.#useMRV = flag;\n\t}\n\n\t/**\n\t * If a solution is found and the search continues, it specifies how much the worst constraint satisfaction degree should be increased.\n\t * @param degree Increasing constraint satisfaction degree.\n\t */\n\tsetIncrementStepOfWorstSatisfactionDegree(degree) {\n\t\tthis.#degInc = degree;\n\t}\n\n\t/**\n\t * Specifies whether or not to intensively prune branches when the problem contains 3- or n-ary constraints.\n\t * Depending on the problem, intensive pruning may increase processing time.\n\t * Default is false.\n\t * @param flag Whether or not to intensively prune branches.\n\t */\n\tsetIntensivePruning(flag) {\n\t\tthis.#pruneIntensively = flag;\n\t}\n\n}\n","/**\n * The class represents a constraint.\n *\n * @author Takuto Yanagida\n * @version 2023-04-11\n */\n\nimport { Element } from './element.js';\nimport { FuzzyRelation } from './relation-fuzzy.js';\n\nexport class Constraint extends Element {\n\n\t/**\n\t * The constant indicating that the satisfaction degree is not defined.\n\t */\n\tstatic UNDEFINED = -1;\n\n\trel;\n\n\t// Called only from Problem.\n\tconstructor(r) {\n\t\tsuper();\n\t\tthis.rel = r;\n\t}\n\n\t/**\n\t * Returns the crisp relation between variables.\n\t * @return Relation.\n\t */\n\tcrispRelation() {\n\t\treturn this.rel;\n\t}\n\n\t/**\n\t * Returns the fuzzy relation between variables.\n\t * @return Relation.\n\t */\n\tfuzzyRelation() {\n\t\treturn this.rel;\n\t}\n\n\t/**\n\t * Returns whether this is a fuzzy constraint.\n\t * @return True if it is fuzzy constraint.\n\t */\n\tisFuzzy() {\n\t\treturn this.rel instanceof FuzzyRelation;\n\t}\n\n\t/**\n\t * Returns a string representation.\n\t * @return A string representation.\n\t */\n\ttoString() {\n\t\tconst s = this.satisfactionDegree();\n\t\treturn `c${this.index()}${this.name() === '' ? '' : `(${this.name()})`} = ${s === Constraint.UNDEFINED ? 'UNDEFINED' : s}`;\n\t}\n\n\t/**\n\t * Returns the order of the constraint, i.e., the number of (associated) variables in the scope.\n\t * @return Order.\n\t */\n\tsize() {}\n\n\t/**\n\t * Gets the associated variable by specifying its index.\n\t * @param index Index.\n\t * @return A variable.\n\t */\n\tat(index) {}\n\n\t/**\n\t * Gets the iterator of the associated variables.\n\t */\n\t[Symbol.iterator]() {}\n\n\t/**\n\t * Returns whether the specified variable is associated or not.\n\t * @param v A variable.\n\t * @return True if it is associated.\n\t */\n\thas(v) {}\n\n\t/**\n\t * Gets the index of a specified variable.\n\t * If not found, returns -1.\n\t * @param v A variable.\n\t * @return Index.\n\t */\n\tindexOf(v) {}\n\n\t/**\n\t * Returns the number of scope variables that have not been assigned a value.\n\t * @return Number of variables\n\t */\n\temptyVariableSize() {}\n\n\t/**\n\t * Returns whether or not the satisfaction (degree) is defined.\n\t * Satisfaction (degree) is defined when all associated variables have values assigned to them.\n\t * @return True if it is defined.\n\t */\n\tisDefined() {}\n\n\t/**\n\t * Returns whether or not this constraint is satisfied.\n\t * @return 1 if satisfied, 0 if not, UNDEFINED if undefined\n\t */\n\tisSatisfied() {}\n\n\t/**\n\t * Gets the current satisfaction degree.\n\t * @return Degree 0 - 1, UNDEFINED if undefined.\n\t */\n\tsatisfactionDegree() {}\n\n\t/**\n\t * Returns the set of constraints connected via the associated variables.\n\t * @return A set of constraints.\n\t */\n\tneighbors() {}\n\n\t/**\n\t * Calculates the highest consistency degree.\n\t * That is, it seeks the highest satisfaction degree of the possible combinations of variable assignments for a given constraint.\n\t * When all associated variables have been assigned values, it returns the same value as getSatisfactionDegree().\n\t * @return The highest consistency degree.\n\t */\n\thighestConsistencyDegree() {}\n\n\t/**\n\t * Calculates the lowest consistency degree.\n\t * That is, it seeks the lowest satisfaction degree of the possible combinations of variable assignments for a given constraint.\n\t * When all associated variables have been assigned values, it returns the same value as getSatisfactionDegree().\n\t * @return The lowest consistency degree.\n\t */\n\tlowestConsistencyDegree() {}\n\n}\n","/**\n * The common class of variables and constraints.\n *\n * @author Takuto Yanagida\n * @version 2022-08-15\n */\n\nexport class Element {\n\n\t#index = -1;\n\t#name  = '';\n\n\t/**\n\t * It is used when the user wishes to associate an arbitrary object with each element.\n\t */\n\tuserObject = null;\n\n\t/**\n\t * Used when the solver wants to associate an arbitrary object with each element.\n\t */\n\tsolverObject = null;\n\n\t// Called only from Problem.\n\tsetIndex(index) {\n\t\tthis.#index = index;\n\t}\n\n\t/**\n\t * Sets the name.\n\t *\n\t * @param name String representing the name.\n\t */\n\tsetName(name) {\n\t\tthis.#name = name;\n\t}\n\n\t/**\n\t * Get the index on the owned problem.\n\t * Each variable and constraint is assigned a serial number as an index, which is used to access it through the problem.\n\t *\n\t * @return Integer value representing the index.\n\t */\n\tindex() {\n\t\treturn this.#index;\n\t}\n\n\t/**\n\t * Gets the name.\n\t *\n\t * @return String representing the name.\n\t */\n\tname() {\n\t\treturn this.#name;\n\t}\n\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/**\n * The class represents fuzzy relationships between variables.\n *\n * @author Takuto Yanagida\n * @version 2023-03-25\n */\n\nimport { Relation } from './relation.js';\n\nexport class FuzzyRelation extends Relation {\n\n\t/**\n\t * Gets the satisfaction degree in this fuzzy relation.\n\t * @param vals Values of each variable\n\t * @return A satisfaction degree d (0 <= d <= 1).\n\t */\n\tsatisfactionDegree(...vals) {\n\t\tthrow new Exception();\n\t}\n\n\t/**\n\t * Returns a view as a crisp relation.\n\t * @return A crisp relation.\n\t */\n\tasCrispRelation() {\n\t\treturn new CrispRelationView(this);\n\t}\n\n}\n","/**\n * An interface that represents the relationship between variables.\n * Use CrispRelation or FuzzyRelation class that implement this interface.\n *\n * @author Takuto Yanagida\n * @version 2023-03-25\n */\n\nexport class Relation {\n\n}\n","/**\n * The class represents multiple variables and their assignments.\n *\n * @author Takuto Yanagida\n * @version 2023-04-16\n */\n\nimport { Assignment } from './assignment.js';\n\nexport class AssignmentList {\n\n\tstatic fromVariables(vs) {\n\t\tconst al = new AssignmentList();\n\t\tal.setVariables(vs);\n\t\treturn al;\n\t}\n\n\t#as = [];\n\n\tconstructor() {\n\t}\n\n\tsetProblem(problem) {\n\t\tthis.#as.length = 0;\n\t\tfor (const v of problem.variables()) {\n\t\t\tthis.#as.push(new Assignment({ variable: v, value: v.value() }));\n\t\t}\n\t}\n\n\tsetAssignmentList(al) {\n\t\tthis.#as.length = 0;\n\t\tfor (const a of al) {\n\t\t\tthis.#as.push(new Assignment({ variable: a.variable(), value: a.value() }));\n\t\t}\n\t}\n\n\tsetVariables(vs) {\n\t\tthis.#as.length = 0;\n\t\tfor (const v of vs) {\n\t\t\tthis.#as.push(new Assignment({ variable: v, value: v.value() }));\n\t\t}\n\t}\n\n\taddVariable(variable, value = null) {\n\t\tthis.#as.push(new Assignment({ variable, value }));\n\t}\n\n\tapply() {\n\t\tfor (const a of this.#as) a.apply();\n\t}\n\n\t/**\n\t * Remove all assignments.\n\t */\n\tclear() {\n\t\tthis.#as.length = 0;\n\t}\n\n\t/**\n\t * Checks whether the list is empty or not.\n\t * @return True if empty.\n\t */\n\tisEmpty() {\n\t\treturn this.#as.length === 0;\n\t}\n\n\t/**\n\t * Gets the number of assignments.\n\t * @return Number of assignments.\n\t */\n\tsize() {\n\t\treturn this.#as.length;\n\t}\n\n\tdifferenceSize() {\n\t\tlet diff = 0;\n\t\tfor (const a of this.#as) {\n\t\t\tif (a.variable().value() !== a.value()) ++diff;\n\t\t}\n\t\treturn diff;\n\t}\n\n\t/**\n\t * Gets the assignments by specifying their indices.\n\t * @param index Index.\n\t * @return An assignment.\n\t */\n\tat(index) {\n\t\treturn this.#as[index];\n\t}\n\n\t/**\n\t * Gets the iterator of the assignments.\n\t */\n\t[Symbol.iterator]() {\n\t\treturn this.#as[Symbol.iterator]();\n\t}\n\n\t/**\n\t * Gets an arbitrary assignment.\n\t *\n\t * @return An assignment.\n\t */\n\trandom() {\n\t\treturn this.#as[Math.floor(Math.random() * this.#as.length)];\n\t}\n\n}\n","/**\n * The class represents a pair of variables and the values to be assigned to them.\n *\n * @author Takuto Yanagida\n * @version 2023-03-25\n */\n\nexport class Assignment {\n\n\t#variable;\n\t#value;\n\n\tconstructor(args) {\n\t\tif (args.assignment) {\n\t\t\tthis.#variable = args.assignment.variable();\n\t\t\tthis.#value    = args.assignment.value();\n\t\t} else if (args.variable) {\n\t\t\tthis.#variable = args.variable;\n\t\t\tthis.#value    = args.value ?? args.variable.value();\n\t\t}\n\t}\n\n\t/**\n\t * Assigns a value to a stored variable.\n\t */\n\tapply() {\n\t\tthis.#variable.assign(this.#value);\n\t}\n\n\t/**\n\t * Returns a string representation.\n\t * @return A string representation.\n\t */\n\ttoString() {\n\t\treturn `v${this.#variable.index()} <- ${this.#value}`;\n\t}\n\n\t/**\n\t * Gets the value.\n\t * @return Value.\n\t */\n\tvalue() {\n\t\treturn this.#value;\n\t}\n\n\t/**\n\t * Gets the variable.\n\t * @return Variable.\n\t */\n\tvariable() {\n\t\treturn this.#variable;\n\t}\n\n}\n","/**\n * This class holds the branch pruning states for a domain.\n *\n * @author Takuto Yanagida\n * @version 2023-03-25\n */\n\nexport class DomainPruner {\n\n\tstatic #UNHIDDEN = -1;\n\n\t#hiddenLevels;\n\t#hiddenSize = 0;\n\n\t/**\n\t * Generates a class that holds branch pruning states for a domain.\n\t * @param size Size of the corresponding domain\n\t */\n\tconstructor(size) {\n\t\tthis.#hiddenLevels = new Array(size);\n\t\tthis.#hiddenLevels.fill(DomainPruner.#UNHIDDEN);\n\t}\n\n\t/**\n\t * Returns the size of the erased element.\n\t * @return Size of the erased element.\n\t */\n\thiddenSize() {\n\t\treturn this.#hiddenSize;\n\t}\n\n\t/**\n\t * Erases the element at the specified index.\n\t * @param index Index.\n\t * @param level Level.\n\t */\n\thide(index, level) {\n\t\tif (this.#hiddenLevels[index] === DomainPruner.#UNHIDDEN) {\n\t\t\t++this.#hiddenSize;\n\t\t}\n\t\tthis.#hiddenLevels[index] = level;\n\t}\n\n\t/**\n\t * Returns whether the element is empty or not.\n\t * Returns true if all elements have been erased.\n\t * @return True if empty.\n\t */\n\tisEmpty() {\n\t\treturn this.#hiddenLevels.length === this.#hiddenSize;\n\t}\n\n\t/**\n\t * Returns whether or not the element at the specified index has been erased.\n\t * @param index Index.\n\t * @return True if erased.\n\t */\n\tisValueHidden(index) {\n\t\treturn this.#hiddenLevels[index] !== DomainPruner.#UNHIDDEN;\n\t}\n\n\t/**\n\t * Restores the value that had been erased, by specifying a level.\n\t * @param level Level\n\t */\n\treveal(level) {\n\t\tfor (let i = 0; i < this.#hiddenLevels.length; ++i) {\n\t\t\tif (this.#hiddenLevels[i] === level) {\n\t\t\t\tthis.#hiddenLevels[i] = DomainPruner.#UNHIDDEN;\n\t\t\t\t--this.#hiddenSize;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Restores all erased values.\n\t */\n\trevealAll() {\n\t\tthis.#hiddenLevels.fill(DomainPruner.#UNHIDDEN);\n\t\tthis.#hiddenSize = 0;\n\t}\n\n}\n","/**\n * The class for solvers for finding solutions to constraint satisfaction problems.\n *\n * @author Takuto Yanagida\n * @version 2023-04-16\n */\n\nexport class Solver {\n\n\t_debug = true;\n\n\t_debugOutput = e => console.log(e);\n\n\t/**\n\t * The crisp/fuzzy constraint satisfaction problem solved by the solver.\n\t */\n\t_pro;\n\n\t/**\n\t *  Limit number of iterations.\n\t */\n\t_iterLimit = null;\n\n\t/**\n\t * Time limit.\n\t */\n\t_timeLimit = null;\n\n\t/**\n\t * Target 'satisfied constraint rate' or 'constraint satisfaction degree'.\n\t */\n\t_targetDeg = 0.8;\n\n\t/**\n\t * Listeners of this solver.\n\t */\n\t#listener = [];\n\n\t/**\n\t * Generates a solver given a constraint satisfaction problem.\n\t * @param pro A constraint satisfaction problem.\n\t */\n\tconstructor(pro) {\n\t\tthis._pro = pro;\n\t}\n\n\t/**\n\t * Returns the name of the solver.\n\t * @return The name.\n\t */\n\tname() {\n\t\treturn '';\n\t}\n\n\t/**\n\t * Placeholder for implementing an algorithm.\n\t * The solve method calls this method and returns the return value of this method.\n\t * @return True if the algorithm succeeds,\n\t */\n\texec() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Sets and limits the maximum number of iterations for the solver's behavior.\n\t * After the specified number of iterations, the solver stops as a failure. The specific behavior depends on the solver.\n\t * @param count Maximum value; null means not set.\n\t */\n\tsetIterationLimit(count = null) {\n\t\tthis._iterLimit = count;\n\t}\n\n\t/**\n\t * Sets a time limit on the solver's behavior.\n\t * If the specified time is exceeded, the solver stops as a failure. The specific behavior depends on the solver.\n\t * @param msec Time limit. null means not set.\n\t */\n\tsetTimeLimit(msec = null) {\n\t\tthis._timeLimit = msec;\n\t}\n\n\t/**\n\t * The goal to be achieved, which is the condition for stopping the solver, is set as the constraint satisfaction degree (fuzzy) or the percentage of constraints satisfied (crisp).\n\t * The solver stops as success if the specified percentage is reached or exceeded. The specific behavior depends on the solver.\n\t * @param rate Degree or rate. null indicates not set.\n\t */\n\tsetTargetRate(rate = null) {\n\t\tthis._targetDeg = rate;\n\t}\n\n\t/**\n\t * Computes the solution to a constraint satisfaction problem.\n\t * The specific meaning of the return value depends on the implementation of the algorithm.\n\t * @return True if the algorithm succeeds\n\t */\n\tsolve() {\n\t\treturn this.exec();\n\t}\n\n\taddListener(l) {\n\t\tthis.#listener.add(l);\n\t}\n\n\tremoveListener(l) {\n\t\tthis.#listener.splice(this.#listener.indexOf(l), 1);\n\t}\n\n\tfoundSolution(solution, worstDegree) {\n\t\tlet finish = false;\n\n\t\tfor (const l of this.#listener) {\n\t\t\tif (l.foundSolution(solution, worstDegree)) {\n\t\t\t\tfinish = true;\n\t\t\t}\n\t\t}\n\t\treturn finish;\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\t/**\n\t * Sets whether to output debug strings.\n\t * @param boolean flag Do output if true.\n\t */\n\tsetDebugMode(flag) {\n\t\tthis._debug = flag;\n\t}\n\n\t/**\n\t * Sets a function that used for outputting debug strings.\n\t * @param function fn Function called when debug output.\n\t */\n\tsetDebugOutput(fn) {\n\t\tthis._debugOutput = fn;\n\t}\n\n\t_debugOutput(str) {\n\t\tif (this._debug) this._debugOutput(str);\n\t}\n\n}\n"],"names":[],"version":3,"file":"fuzzy-forward-checking.c2f2e495.js.map","sourceRoot":"/__parcel_source_root/"}